name: Post-Build Action

on:
  workflow_run:
    workflows: ['End-to-end tests with Cypress']
    types: [completed]

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      # Analyze the project with Sonar.
      # The result will be displayed in: https://sonarcloud.io/dashboard?id=estefafdez_cypress-template
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # Create mochawesome report and json to get the results
      - name: Merge mochawesome report
        run: npm run merge_reports

      - name: Generate mochawesome report.
        run: npm run generate_mochawesome_report

        # Display the results:
      - name: Display results
        run: chmod +x script/results.sh
      - id: vars
        run: echo ::set-output name=testResult::$(./script/results.sh)

      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: mochawesome
          path: mochawesome-report

      # Publish Test Results
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.6
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: report/*.xml

      # Slack Notify
      - name: Slack Notify
        uses: rtCamp/action-slack-notify@v2.1.2
        if: always()
        env:
          SLACK_CHANNEL: travis-ci
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://github.com/estefafdez/cypress-template/blob/main/script/github.png
          SLACK_USERNAME: 'Github Actions'
          SLACK_FOOTER: 'Github project: https://github.com/estefafdez/cypress-template'
          SLACK_TITLE: 'Test Suite Results:'
          SLACK_MESSAGE: ${{ steps.vars.outputs.testResult }}

  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      # Analyze the project with Sonar.
      # The result will be displayed in: https://sonarcloud.io/dashboard?id=estefafdez_cypress-template
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Upload artifacts with the tests results
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: report
          path: report

      # Create mochawesome report and json to get the results
      - name: Merge mochawesome report
        run: npm run merge_reports

      - name: Generate mochawesome report.
        run: npm run generate_mochawesome_report

        # Display the results:
      - name: Display results
        run: chmod +x script/results.sh
      - id: vars
        run: echo ::set-output name=testResult::$(./script/results.sh)

      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: mochawesome
          path: mochawesome-report

      # Publish Test Results
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.6
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: report/*.xml

      # Slack Notify
      - name: Slack Notify
        uses: rtCamp/action-slack-notify@v2.1.2
        if: always()
        env:
          SLACK_CHANNEL: travis-ci
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://github.com/estefafdez/cypress-template/blob/main/script/github.png
          SLACK_USERNAME: 'Github Actions'
          SLACK_FOOTER: 'Github project: https://github.com/estefafdez/cypress-template'
          SLACK_TITLE: 'Test Suite Results:'
          SLACK_MESSAGE: ${{ steps.vars.outputs.testResult }}
